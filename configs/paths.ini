; niftireg paths file
; example paths file for nifti registration of 'subj' to 'atlas'

; ----- Input Paths -----
[in]
; option 1, if params.scale.method == resize
; only include a moving and a fixed file. In this case the scale parameters will determine which scales are used.
movingFile = /path/to/subj_ds7_us7_reg.nii.gz
movingMaskFile = /path/to/subj_ds7_us7_reg_mask.nii.gz
fixedFile = /path/to/atl_brain_proc_ds7_us7.nii.gz
fixedMaskFile = /path/to/subj_ds7_us7_reg_mask.nii.gz

; option 2, if params.scale.method == load
; provide a different nifti for each scale
movingScales = {'/path/to/subj_ds7_us1_reg.nii.gz', '/path/to/subj_ds7_us2_reg.nii.gz', '/path/to/subj_ds7_us3_reg.nii.gz', '/path/to/subj_ds7_us4_reg.nii.gz', '/path/to/subj_ds7_us5_reg.nii.gz', '/path/to/subj_ds7_us6_reg.nii.gz', '/path/to/subj_ds7_us7_reg.nii.gz'}
movingMaskScales = {'/path/to/subj_ds7_us1_dsmask_reg.nii.gz', '/path/to/subj_ds7_us2_dsmask_reg.nii.gz', '/path/to/subj_ds7_us3_dsmask_reg.nii.gz', '/path/to/subj_ds7_us4_dsmask_reg.nii.gz', '/path/to/subj_ds7_us5_dsmask_reg.nii.gz', '/path/to/subj_ds7_us6_dsmask_reg.nii.gz', '/path/to/subj_ds7_us7_dsmask_reg.nii.gz'}
fixedScales = {'/path/to/atl_brain_proc_ds7_us1.nii.gz', '/path/to/atl_brain_proc_ds7_us2.nii.gz', '/path/to/atl_brain_proc_ds7_us3.nii.gz', '/path/to/atl_brain_proc_ds7_us4.nii.gz', '/path/to/atl_brain_proc_ds7_us5.nii.gz', '/path/to/atl_brain_proc_ds7_us6.nii.gz', '/path/to/atl_brain_proc_ds7_us7.nii.gz'}
; can also be provided, but in this case it is the atlas and we assume the atlas is not sparse.
fixedMaskScales = 

; optional initial displacement. This will be loaded in and re-shaped to the lowest scale and worked from there.
; 5D nifti.
initDispl = /path/to/initDispl.nii.gz

; ----- Output Paths -----
[out]
; affine warp - all optional, and only useful 
affineWarp = /path/to/subj-2-atlas-affine.mat
affineMoving = /path/to/subj-in-atlas_via_subj-2-atlas-affine.nii.gz
affineMask = /path/to/subj-mask-in-atlas_via_subj-2-atlas-affine.nii.gz

; final deformable displacement 
displ = /path/to/subj-2-atlas-warp.nii.gz

; final moved image
moving = /path/to/subj-in-atlas_via_subj-2-atlas-warp.nii.gz
movingMask = /path/to/subj-mask-in-atlas_via_subj-2-atlas-warp.nii.gz

; inverse (optional).
; Warning: any inverse out nifti involves inverting a warp, which is very time consuming
invDispl = /path/to/subj-2-atlas-invWarp.nii.gz
fixed = /path/to/atlas-in-subj_via_subj-2-atlas-invWarp.nii.gz

